#!/usr/bin/env php
<?php

use Ivan1986\DevContainer\Command;
use Ivan1986\DevContainer\Event\NameResolverSubscriber;
use Symfony\Component\Console\Application;
use Symfony\Component\Console\Input\InputOption;
use Symfony\Component\EventDispatcher\EventDispatcher;

function includeIfExists($file)
{
    if (file_exists($file)) {
        return include $file;
    }
}

if ((!$loader = includeIfExists(__DIR__.'/../vendor/autoload.php')) && (!$loader = includeIfExists(__DIR__.'/../../../autoload.php'))) {
    die('You must set up the project dependencies, run the following commands:'.PHP_EOL.
        'curl -sS https://getcomposer.org/installer | php'.PHP_EOL.
        'php composer.phar install'.PHP_EOL);
}

$app = new Application('Container manager');
$dispatcher = new EventDispatcher();
$app->setDispatcher($dispatcher);

// Add container name option
$app->getDefinition()->addOptions([
    new InputOption('--name', null, InputOption::VALUE_REQUIRED, 'Custom docker container name'),
]);
$dispatcher->addSubscriber(new NameResolverSubscriber());

$app->add(new Command\UpCommand());
$app->add(new Command\RebuildCommand());
$app->add(new Command\SshCommand());
$app->add(new Command\AnsibleCommand());

$app->run();
